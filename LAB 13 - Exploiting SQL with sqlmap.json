{
  "title" : "Uploaded LAB 13 - Exploiting SQL with sqlmap",
  "description" : "Using sqlmap to exploit SQL and Database.",
  "prerequisites" : [ "Prepare lession for SQL and Database." ],
  "outcomes" : [ "Know how to exploit SQL and Database." ],
  "state" : "UNRELEASED",
  "show_stepper_bar" : true,
  "levels" : [ {
    "title" : "Introduction",
    "level_type" : "INFO_LEVEL",
    "order" : 0,
    "estimated_duration" : 0,
    "minimal_possible_solve_time" : null,
    "content" : "Welcome to Lab 13 of our HOD Labs training series. In this lesson, we will focus on using a powerful tool called sqlmap to exploit SQL vulnerabilities in web applications. Specifically, we will demonstrate how to leverage sqlmap to exploit SQL injection vulnerabilities in the webpage http://testphp.vulnweb.com/.\n\nSQL injection is a common web application vulnerability that occurs when an attacker can manipulate an application's SQL queries through user inputs. This can lead to unauthorized access, data leakage, and even the complete compromise of a website and its underlying database.\n\nSqlmap is an open-source penetration testing tool that automates the process of detecting and exploiting SQL injection flaws. It provides a comprehensive set of features for identifying and exploiting SQL vulnerabilities in a web application, allowing penetration testers to assess the security of their target systems effectively.\n\nBy the end of this lab, you will have a solid understanding of how to utilize sqlmap to identify and exploit SQL injection vulnerabilities in a web application. We will specifically target the test website http://testphp.vulnweb.com/ to demonstrate various techniques and functionalities of sqlmap.\n\nPrerequisites:\nBefore diving into this lab, it is essential to have a basic understanding of SQL (Structured Query Language) and web application vulnerabilities like SQL injection. Familiarity with the HTTP protocol and web requests will also be beneficial. Additionally, ensure that you have sqlmap installed on your system.\n\n## Lab Objectives:\n\nIn this lab, you will learn the basics of sqlmap and its capabilities.\nUnderstand how to use sqlmap to identify SQL injection vulnerabilities in a target web application.\nExplore different sqlmap options and techniques for exploiting SQL injection vulnerabilities.\nExecute sqlmap commands to extract data, enumerate databases, and perform other tasks on the target website http://testphp.vulnweb.com/.\n\n## Lab Environment:\nWe will be using the webpage http://testphp.vulnweb.com/ as our target throughout this lab. It is a deliberately vulnerable web application designed for educational purposes. Remember to only perform these actions within the controlled environment of this lab and avoid any unauthorized activities.\n\nLet's get started with exploiting SQL using sqlmap and uncover the hidden vulnerabilities in the target web application!"
  }, {
    "title" : "Quick Knowledge Test",
    "level_type" : "ASSESSMENT_LEVEL",
    "order" : 1,
    "estimated_duration" : 15,
    "minimal_possible_solve_time" : null,
    "questions" : [ {
      "question_type" : "MCQ",
      "text" : "What is the purpose of sqlmap?",
      "points" : 5,
      "penalty" : 5,
      "order" : 0,
      "answer_required" : true,
      "choices" : [ {
        "text" : "To automate SQL injection attacks",
        "correct" : true,
        "order" : 0
      }, {
        "text" : "To prevent SQL injection vulnerabilities",
        "correct" : false,
        "order" : 1
      }, {
        "text" : "To encrypt SQL queries",
        "correct" : false,
        "order" : 2
      }, {
        "text" : "To generate random SQL statements",
        "correct" : false,
        "order" : 3
      } ]
    }, {
      "question_type" : "MCQ",
      "text" : "Which vulnerability does sqlmap primarily target?",
      "points" : 5,
      "penalty" : 5,
      "order" : 1,
      "answer_required" : true,
      "choices" : [ {
        "text" : "Cross-Site Scripting (XSS)",
        "correct" : false,
        "order" : 0
      }, {
        "text" : "Cross-Site Request Forgery (CSRF)",
        "correct" : false,
        "order" : 1
      }, {
        "text" : "Structured Query Language (SQL) injection",
        "correct" : true,
        "order" : 2
      }, {
        "text" : "Remote Code Execution (RCE)",
        "correct" : false,
        "order" : 3
      } ]
    }, {
      "question_type" : "MCQ",
      "text" : "What is the main advantage of using sqlmap?",
      "points" : 5,
      "penalty" : 5,
      "order" : 2,
      "answer_required" : true,
      "choices" : [ {
        "text" : "It can detect all types of web vulnerabilities.",
        "correct" : false,
        "order" : 0
      }, {
        "text" : "It can bypass firewalls and intrusion detection systems.",
        "correct" : false,
        "order" : 1
      }, {
        "text" : "It automates the process of finding and exploiting SQL injection flaws.",
        "correct" : true,
        "order" : 2
      }, {
        "text" : "It provides real-time alerts for potential SQL injection attacks.",
        "correct" : false,
        "order" : 3
      } ]
    }, {
      "question_type" : "MCQ",
      "text" : "Which web application will be targeted in this lab?",
      "points" : 5,
      "penalty" : 5,
      "order" : 3,
      "answer_required" : true,
      "choices" : [ {
        "text" : "http://testphp.vulnweb.com/",
        "correct" : true,
        "order" : 0
      }, {
        "text" : "https://fap.fpt.edu.vn/",
        "correct" : false,
        "order" : 1
      }, {
        "text" : "https://ptpscheme.com/",
        "correct" : false,
        "order" : 2
      }, {
        "text" : "https://chat.openai.com/",
        "correct" : false,
        "order" : 3
      } ]
    }, {
      "question_type" : "MCQ",
      "text" : "What are the prerequisites for this lab?",
      "points" : 5,
      "penalty" : 5,
      "order" : 4,
      "answer_required" : true,
      "choices" : [ {
        "text" : "Basic knowledge of SQL and web application vulnerabilities.",
        "correct" : true,
        "order" : 0
      }, {
        "text" : "Familiarity with sqlmap commands and options.",
        "correct" : false,
        "order" : 1
      }, {
        "text" : "A functioning SQL injection scanner.",
        "correct" : false,
        "order" : 2
      }, {
        "text" : "Experience in writing secure web applications.",
        "correct" : false,
        "order" : 3
      } ]
    }, {
      "question_type" : "MCQ",
      "text" : "Which option is used with sqlmap to enumerate the databases in a target web application?",
      "points" : 5,
      "penalty" : 5,
      "order" : 5,
      "answer_required" : true,
      "choices" : [ {
        "text" : " --tables",
        "correct" : false,
        "order" : 0
      }, {
        "text" : "-u",
        "correct" : false,
        "order" : 1
      }, {
        "text" : " -dbs",
        "correct" : true,
        "order" : 2
      }, {
        "text" : "--columns",
        "correct" : false,
        "order" : 3
      } ]
    }, {
      "question_type" : "MCQ",
      "text" : "Which SQLmap option allows you to specify a custom user-agent string for HTTP requests during the exploitation process?",
      "points" : 5,
      "penalty" : 5,
      "order" : 6,
      "answer_required" : true,
      "choices" : [ {
        "text" : "--headers",
        "correct" : false,
        "order" : 0
      }, {
        "text" : "--level",
        "correct" : false,
        "order" : 1
      }, {
        "text" : "--random-agent",
        "correct" : false,
        "order" : 2
      }, {
        "text" : " --user-agent",
        "correct" : true,
        "order" : 3
      } ]
    }, {
      "question_type" : "MCQ",
      "text" : "When using sqlmap, which switch enables you to perform a full database management system (DBMS) fingerprint?",
      "points" : 5,
      "penalty" : 5,
      "order" : 7,
      "answer_required" : true,
      "choices" : [ {
        "text" : " --identify",
        "correct" : false,
        "order" : 0
      }, {
        "text" : " --fingerprint",
        "correct" : true,
        "order" : 1
      }, {
        "text" : "--dbms",
        "correct" : false,
        "order" : 2
      }, {
        "text" : "--dbs",
        "correct" : false,
        "order" : 3
      } ]
    }, {
      "question_type" : "MCQ",
      "text" : "To bypass a web application firewall (WAF) that blocks certain characters in SQL queries, which sqlmap tamper script can you use?",
      "points" : 5,
      "penalty" : 5,
      "order" : 8,
      "answer_required" : true,
      "choices" : [ {
        "text" : "base64encode.py",
        "correct" : false,
        "order" : 0
      }, {
        "text" : " charunicodeencode.py",
        "correct" : false,
        "order" : 1
      }, {
        "text" : "equaltolike.py",
        "correct" : true,
        "order" : 2
      }, {
        "text" : "wildcardsemicolon.py",
        "correct" : false,
        "order" : 3
      } ]
    }, {
      "question_type" : "MCQ",
      "text" : "In sqlmap, what is the purpose of the \"--os-shell\" option?",
      "points" : 5,
      "penalty" : 5,
      "order" : 9,
      "answer_required" : true,
      "choices" : [ {
        "text" : "Executes operating system commands on the target server.",
        "correct" : true,
        "order" : 0
      }, {
        "text" : "Creates a reverse shell on the attacker's machine.",
        "correct" : false,
        "order" : 1
      }, {
        "text" : "Spawns an interactive shell for SQL injection exploitation.",
        "correct" : false,
        "order" : 2
      }, {
        "text" : "Performs OS fingerprinting on the database server.",
        "correct" : false,
        "order" : 3
      } ]
    }, {
      "question_type" : "MCQ",
      "text" : "Which sqlmap option is used to enumerate the current user's privileges on the exploited database server?",
      "points" : 5,
      "penalty" : 5,
      "order" : 10,
      "answer_required" : true,
      "choices" : [ {
        "text" : "--privileges",
        "correct" : true,
        "order" : 0
      }, {
        "text" : "--roles",
        "correct" : false,
        "order" : 1
      }, {
        "text" : "--schema",
        "correct" : false,
        "order" : 2
      }, {
        "text" : "--tables",
        "correct" : false,
        "order" : 3
      } ]
    }, {
      "question_type" : "MCQ",
      "text" : "In sqlmap, which tamper script can be used to evade web application firewalls (WAFs) that inspect and block certain SQL keywords?",
      "points" : 5,
      "penalty" : 5,
      "order" : 11,
      "answer_required" : true,
      "choices" : [ {
        "text" : " space2comment.py",
        "correct" : true,
        "order" : 0
      }, {
        "text" : "chardoubleencode.py",
        "correct" : false,
        "order" : 1
      }, {
        "text" : "between.py",
        "correct" : false,
        "order" : 2
      }, {
        "text" : "overlongutf8.py",
        "correct" : false,
        "order" : 3
      } ]
    }, {
      "question_type" : "MCQ",
      "text" : "What is the purpose of the \"--skip-waf\" option in sqlmap?",
      "points" : 5,
      "penalty" : 5,
      "order" : 12,
      "answer_required" : true,
      "choices" : [ {
        "text" : " It disables tampering techniques used to bypass WAFs.",
        "correct" : false,
        "order" : 0
      }, {
        "text" : "It instructs sqlmap to avoid detection by the target WAF.",
        "correct" : true,
        "order" : 1
      }, {
        "text" : " It skips the database enumeration phase against WAF-protected applications.",
        "correct" : false,
        "order" : 2
      }, {
        "text" : "It prevents sqlmap from injecting payloads that trigger WAF alerts.",
        "correct" : false,
        "order" : 3
      } ]
    }, {
      "question_type" : "MCQ",
      "text" : "To leverage time-based blind SQL injection attacks, which sqlmap option allows an attacker to specify the time delay in the injected SQL queries?",
      "points" : 5,
      "penalty" : 5,
      "order" : 13,
      "answer_required" : true,
      "choices" : [ {
        "text" : " --time-sec",
        "correct" : false,
        "order" : 0
      }, {
        "text" : " --delay",
        "correct" : false,
        "order" : 1
      }, {
        "text" : " --technique",
        "correct" : false,
        "order" : 2
      }, {
        "text" : "--sleep",
        "correct" : true,
        "order" : 3
      } ]
    }, {
      "question_type" : "MCQ",
      "text" : "In sqlmap, what does the \"--purge-output\" option do?",
      "points" : 5,
      "penalty" : 5,
      "order" : 14,
      "answer_required" : true,
      "choices" : [ {
        "text" : "Deletes all logs and output files after the exploitation process.",
        "correct" : true,
        "order" : 0
      }, {
        "text" : "Clears the terminal screen to enhance readability during the attack.",
        "correct" : false,
        "order" : 1
      }, {
        "text" : "Removes sensitive data from the database after data extraction.",
        "correct" : false,
        "order" : 2
      }, {
        "text" : "Purges previous scan results from the sqlmap database.",
        "correct" : false,
        "order" : 3
      } ]
    } ],
    "instructions" : "Answer questions then go to next level.",
    "assessment_type" : "TEST"
  }, {
    "title" : "Get Access",
    "level_type" : "ACCESS_LEVEL",
    "order" : 2,
    "estimated_duration" : 0,
    "minimal_possible_solve_time" : null,
    "passkey" : "start-training-lab-13",
    "cloud_content" : "Your first task is to access the sandbox, where you will complete all following tasks.\n\n### Sandbox access\n1. In the topology overview on the right, right-click on **`client`** and then click on **`Open console`**, and a new pop-up window will appear. \n2. Login with username **`client`** and password **`password`**. (*You may want to login into the client with multiple session in terminals which maybe easier for doing this lab*)\n3. After you have successfully connected, Submit the answer **`start-training-lab-13`**.\n\nAlternatively, you can use SSH to connect to the machine. SSH access makes it easier to copy-paste commands and flags, but requires more steps to set up. See [documentation](https://docs.crp.kypo.muni.cz/user-guide-advanced/sandboxes/sandbox-access/#user-access) for more details.\n",
    "local_content" : "Before proceeding further, you need to start a sandbox on your machine. \nPlease clone [this Gitlab repository](https://<link_to_a_repo>) and follow steps in the README file.\nWhen your sandbox is ready at your host, submit the passkey from the README file."
  }, {
    "title" : "Identify SQL injection vulnerability",
    "level_type" : "TRAINING_LEVEL",
    "order" : 3,
    "estimated_duration" : 10,
    "minimal_possible_solve_time" : null,
    "answer" : "mysql",
    "answer_variable_name" : null,
    "content" : "# Guide:\n1. Navigate to the sqlmap-dev folder\n2. Target the vulnerable website (http://testphp.vulnweb.com/search.php?test=query)\n3. Identify SQL injection vulnerability using sqlmap.\n\n\n## Q: What is the name of DBMS you have found that this website using? (lowercase)",
    "solution" : "* In the terminal or command prompt, enter the following command: \n\n`python3 sqlmap.py -u \"http://testphp.vulnweb.com/search.php?test=query\"`\n\nThis command instructs sqlmap to analyze the provided URL for SQL injection vulnerabilities.",
    "solution_penalized" : true,
    "hints" : [ ],
    "incorrect_answer_limit" : 10,
    "attachments" : [ ],
    "max_score" : 15,
    "variant_answers" : false,
    "reference_solution" : [ ],
    "mitre_techniques" : [ ],
    "expected_commands" : [ ],
    "commands_required" : false
  }, {
    "title" : "Enumerate databases",
    "level_type" : "TRAINING_LEVEL",
    "order" : 4,
    "estimated_duration" : 10,
    "minimal_possible_solve_time" : null,
    "answer" : "acuart",
    "answer_variable_name" : null,
    "content" : "# Find a sqlmap command for scanning the database of testphp web.\n\n## Q: What is the first row dbs name have you found after scan? (lowercase)",
    "solution" : "# In the terminal or command prompt, enter the following command:\n\n`python3 sqlmap.py -u \"http://testphp.vulnweb.com/search.php?test=query\" -dbs`\n\nThis command tells sqlmap to enumerate the databases available in the target website.",
    "solution_penalized" : true,
    "hints" : [ ],
    "incorrect_answer_limit" : 10,
    "attachments" : [ ],
    "max_score" : 15,
    "variant_answers" : false,
    "reference_solution" : [ ],
    "mitre_techniques" : [ ],
    "expected_commands" : [ ],
    "commands_required" : false
  }, {
    "title" : "Enumerate tables",
    "level_type" : "TRAINING_LEVEL",
    "order" : 5,
    "estimated_duration" : 10,
    "minimal_possible_solve_time" : null,
    "answer" : "users",
    "answer_variable_name" : null,
    "content" : "# Find a sqlmap command for scanning tables of 'acuart' database.\n\n## Q: What is the last row table name have you found after scan? (lowercase)",
    "solution" : "# In the terminal or command prompt, enter the following command:\n\n`python3 sqlmap.py -u \"http://testphp.vulnweb.com/search.php?test=query\" --tables -D acuart`\n\nHere, sqlmap will enumerate the tables in the \"acuart\" database of the target website.",
    "solution_penalized" : true,
    "hints" : [ ],
    "incorrect_answer_limit" : 10,
    "attachments" : [ ],
    "max_score" : 15,
    "variant_answers" : false,
    "reference_solution" : [ ],
    "mitre_techniques" : [ ],
    "expected_commands" : [ ],
    "commands_required" : false
  }, {
    "title" : "Enumerate columns",
    "level_type" : "TRAINING_LEVEL",
    "order" : 6,
    "estimated_duration" : 10,
    "minimal_possible_solve_time" : null,
    "answer" : "mediumtext",
    "answer_variable_name" : null,
    "content" : "# Find a sqlmap command for scanning columns of table 'users' in the \"acuart\" database.\n\n\n## Q: What is the type of the 'address' column have you found in table users? (lowercase)",
    "solution" : "# In the terminal or command prompt, enter the following command:\n\n`python3 sqlmap.py -u \"http://testphp.vulnweb.com/search.php?test=query\" --columns -D acuart -T users`\n\nThis command instructs sqlmap to enumerate the columns in the \"users\" table of the \"acuart\" database.",
    "solution_penalized" : true,
    "hints" : [ ],
    "incorrect_answer_limit" : 10,
    "attachments" : [ ],
    "max_score" : 15,
    "variant_answers" : false,
    "reference_solution" : [ ],
    "mitre_techniques" : [ ],
    "expected_commands" : [ ],
    "commands_required" : false
  }, {
    "title" : "Dump data",
    "level_type" : "TRAINING_LEVEL",
    "order" : 7,
    "estimated_duration" : 10,
    "minimal_possible_solve_time" : null,
    "answer" : "test-test",
    "answer_variable_name" : null,
    "content" : "# Find a sqlmap command for extract and display the data from the \"users\" table of the \"acuart\" database.\n\n## Q: What is the username and password have you found out? (lowercase) (Format: username-password)",
    "solution" : "# In the terminal or command prompt, enter the following command:\n\n`python3 sqlmap.py -u \"http://testphp.vulnweb.com/search.php?test=query\" --dump -D acuart -T users`\n\nsqlmap will now extract and display the data from the \"users\" table of the \"acuart\" database.\n",
    "solution_penalized" : true,
    "hints" : [ ],
    "incorrect_answer_limit" : 10,
    "attachments" : [ ],
    "max_score" : 15,
    "variant_answers" : false,
    "reference_solution" : [ ],
    "mitre_techniques" : [ ],
    "expected_commands" : [ ],
    "commands_required" : false
  } ],
  "estimated_duration" : 65,
  "variant_sandboxes" : false
}